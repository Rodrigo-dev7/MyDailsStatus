{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rodrigo/Documentos/www/mydailystatus/pages/create-status.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nvar CreateStatus = function CreateStatus() {\n  var _useState = useState({\n    status: 'bem',\n    coords: {\n      lat: null,\n      \"long\": null\n    }\n  }),\n      dados = _useState[0],\n      setDados = _useState[1];\n\n  var getMyLocation = function getMyLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        console.log(position.coords);\n        setDados(function (old) {\n          return _objectSpread({}, old, {\n            coords: {\n              lat: position.coords.latitude,\n              \"long\": position.coords.longitude\n            }\n          });\n        });\n      });\n    }\n  };\n\n  var onStatusChange = function onStatusChange(evt) {\n    setDados(function (old) {\n      return _objectSpread({}, old, {\n        status: evt.target.value\n      });\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"CreateStatus\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"bem\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), \"Estou sem sintomas\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"gripe\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), \"Estou com sintomas de gripe\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"covid\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), \"Estou com sintomas de COVID\"), \"Sua posi\\xE7\\xE3o atual: \", JSON.stringify(dados), __jsx(\"button\", {\n    onClick: getMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Get my location\"));\n};\n\nexport var __N_SSP = true;\nexport default CreateStatus;","map":{"version":3,"sources":["/home/rodrigo/Documentos/www/mydailystatus/pages/create-status.js"],"names":["React","useState","CreateStatus","status","coords","lat","dados","setDados","getMyLocation","navigator","geolocation","getCurrentPosition","position","console","log","old","latitude","longitude","onStatusChange","evt","target","value","JSON","stringify"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACCD,QAAQ,CAAC;AACjCE,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE,IADC;AAEN,cAAM;AAFA;AAFyB,GAAD,CADT;AAAA,MAClBC,KADkB;AAAA,MACXC,QADW;;AAQzB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACR,MAArB;AACAG,QAAAA,QAAQ,CAAC,UAAAQ,GAAG,EAAI;AACd,mCACKA,GADL;AAEEX,YAAAA,MAAM,EAAE;AACNC,cAAAA,GAAG,EAAEO,QAAQ,CAACR,MAAT,CAAgBY,QADf;AAEN,sBAAMJ,QAAQ,CAACR,MAAT,CAAgBa;AAFhB;AAFV;AAOD,SARO,CAAR;AASD,OAXD;AAYD;AACF,GAfD;;AAgBA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAS;AAC9BZ,IAAAA,QAAQ,CAAC,UAAAQ,GAAG,EAAI;AACd,+BACKA,GADL;AAEEZ,QAAAA,MAAM,EACJgB,GAAG,CAACC,MAAJ,CAAWC;AAHf;AAKD,KANO,CAAR;AAOD,GARD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,KAHR;AAIE,IAAA,OAAO,EAAEH,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,uBAFF,EASE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,OAAO,EAAEA,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gCATF,EAgBE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,OAAO,EAAEA,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gCAhBF,+BAuBsBI,IAAI,CAACC,SAAL,CAAejB,KAAf,CAvBtB,EAwBE;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAxBF,CADF;AA4BD,CA7DD;;;AA8DA,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport auth0 from '../lib/auth0';\n\nconst CreateStatus = () => {\n  const [dados, setDados] = useState({\n    status: 'bem',\n    coords: {\n      lat: null,\n      long: null\n    }\n  })\n  const getMyLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(position.coords)\n        setDados(old => {\n          return {\n            ...old,\n            coords: {\n              lat: position.coords.latitude,\n              long: position.coords.longitude\n            }\n          }\n        })\n      })\n    }\n  }\n  const onStatusChange = (evt) => {\n    setDados(old => {\n      return {\n        ...old,\n        status: \n          evt.target.value\n      }\n    })\n  }\n  return(\n    <div>\n      <h1>CreateStatus</h1>\n      <label className=\"block\" >\n        <input \n          type=\"radio\" \n          name=\"status\"  \n          value=\"bem\" \n          onClick={onStatusChange} />Estou sem sintomas\n      </label>\n      <label className=\"block\">\n        <input \n          type=\"radio\" \n          name=\"status\"  \n          value=\"gripe\" \n          onClick={onStatusChange} />Estou com sintomas de gripe\n      </label>\n      <label className=\"block\">\n        <input \n          type=\"radio\" \n          name=\"status\"  \n          value=\"covid\" \n          onClick={onStatusChange} />Estou com sintomas de COVID\n      </label>\n      Sua posição atual: {JSON.stringify(dados)}\n      <button onClick={getMyLocation}>Get my location</button>\n    </div>\n  )\n}\nexport default CreateStatus;\n\nexport async function getServerSideProps({ req, res }) {\n  const session =  await auth0.getSession(req)\n  if (session) {\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n      }\n    }\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}