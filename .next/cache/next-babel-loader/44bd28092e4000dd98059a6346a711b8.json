{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/Documentos/www/mydailystatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  }, []);\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Status pr\\xF3ximos \\xE0 voc\\xEA:\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, checkin.id), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, JSON.stringify(checkin.coords)));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = `${today.getFullYear()} - ${today.getMonth()} - ${today.getDate()}`;\n    const TodaysCheckin = await db.collection('markers').doc(currentDate).collection('checkes').doc(session.user.sub).get();\n    const todayData = TodaysCheckin.data();\n    let forceCreate = true;\n\n    if (todayData) {\n      // pode ver os otros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checkes').near({\n        center: todayData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          }\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/rodrigo/Documentos/www/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","TodaysCheckin","collection","doc","user","sub","get","todayData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router'\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\n\nconst App = (props) => {\n  useEffect(()=> {\n    if (!props.isAuth) {\n      router.push('/')\n    } else if (props.forceCreate) {\n      router.push('/create-status')\n    }\n  },[])\n    if (!props.isAuth || props.forceCreate ) {\n      return null\n    }\n\n  return(\n    <div>\n      <h1>Status próximos à você:</h1>\n      <table>\n        {props.checkins.map(checkin => {\n          return(\n            <tr>\n              <td>{checkin.id}</td>\n              <td>{checkin.status}</td>\n              <td>{JSON.stringify(checkin.coords)}</td>\n            </tr>\n          )\n        })}\n     \n      </table>\n    </div>\n  )\n}\nexport default App;\n\nexport async function getServerSideProps({ req, res }) {\n  const session =  await auth0.getSession(req)\n  if (session) {\n    const today = new Date()\n    const currentDate = `${today.getFullYear()} - ${today.getMonth()} - ${today.getDate()}`;\n    const TodaysCheckin = await db\n        .collection('markers')\n        .doc(currentDate)\n        .collection('checkes')\n        .doc(session.user.sub)\n        .get()\n    const todayData = TodaysCheckin.data();\n    let forceCreate = true;\n    if (todayData) {\n      // pode ver os otros checkins\n      forceCreate = false;\n      const checkins = await db\n      .collection('markers')\n      .doc(currentDate)\n      .collection('checkes')\n      .near({\n        center: todayData.coordinates,\n        radius: 1000\n      })\n      .get()\n      const checkinsList = []\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          }\n        })\n      })\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      }\n    }\n\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    }\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}